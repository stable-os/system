
name: Build

on:
  push:
    branches: [main]

jobs:
  build_pkg_builder:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - run: sudo curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    - run: sudo apt-get install -y libssl-dev

    - name: Cache
      id: cache-pkg-builder-target
      uses: actions/cache@v3
      with:
        path: util/pkg-builder/target/
        key: ${{ runner.os }}-pkg-builder-target

    - run: cargo build --release
      working-directory: util/pkg-builder
    # upload the binary as an artifact
    - uses: actions/upload-artifact@v2
      with:
        name: pkg-builder
        path: util/pkg-builder/target/release/pkg-builder

  build_packages:
    runs-on: ubuntu-latest
    needs: build_pkg_builder

    strategy:
      matrix:
        package: ['pkg-builder', 'bash', 'glibc', 'coreutils']

    steps:
    - uses: actions/checkout@v2
      with:
        repository: https://github.com/stable-os/packages.git
    # download the pkg-builder binary from the previous job
    - uses: actions/download-artifact@v2
      with:
        name: pkg-builder
        path: pkg-builder

    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y linux-headers-$(uname -r)

    - run: chmod +x pkg-builder/pkg-builder

    - run: ../../pkg-builder/pkg-builder $PACKAGE.toml ../../out.tar.gz
      working-directory: packages/${{ matrix.package }}
      env:
          PACKAGE: ${{ matrix.package }}

  build:
    runs-on: ubuntu-latest
    needs: build_packages
    env:
      TMPROOT: /mnt/tmproot

    steps:
        # - name: Maximize build space
        #   uses: easimon/maximize-build-space@master
        #   with:
        #     root-reserve-mb: 512
        #     swap-size-mb: 1024
        #     remove-dotnet: 'true'
        #     remove-codeql: 'true'
        #     remove-android: 'true'
        #     remove-haskell: 'true'
        #     remove-docker-images: 'true'
          
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Set script permissions
          run: chmod +x ./scripts/*.sh

        - name: Set script permissions
          run: chmod +x ./scripts/*.sh

        - name: Install dependencies
          run: ./scripts/install_dependencies.sh

        - name: Prepare OSTree
          run: ./scripts/prepare_ostree.sh
